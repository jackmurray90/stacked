#!/bin/bash

if [[ "$1" == "set-main" ]]
then
  echo "${2:-main}" > "$HOME/.stackedrc"
  echo "Updated main branch to ${2:-main}"
  exit
fi

stacked_main_branch="$(cat "$HOME/.stackedrc" 2> /dev/null || echo main)"

current_branch="$(git rev-parse --abbrev-ref HEAD)"

# For all the historical tips of this branch
for tip in $(git rev-list --walk-reflogs "$current_branch")
do
  # If this tip was not part of the development branch
  if ! git merge-base --is-ancestor "$tip" "$stacked_main_branch"
  then
    # For each branch containing that tip
    for branch in $(git for-each-ref --format='%(refname)' --contains "$tip" refs/heads | sed s=^refs/heads/==)
    do
      # If these branches are not already on the same line
      if ! git merge-base --is-ancestor "$current_branch" "$branch" && ! git merge-base --is-ancestor "$branch" "$current_branch"
      then
        echo "$branch used to be a descendent of previous tip $tip, and is not currently in line with $current_branch"

        # Rebase branch onto the current branch
        # (only commits after the historical tip)
        if ! git rebase --onto "$current_branch" "$tip" "$branch"
        then
          echo
          echo "There was a conflict when rebasing one of the child branches"
          echo "Please resolve the conflicts and finish rebasing."
          echo "After that, check out the original branch and run stacked again to continue."
          echo
          exit
        fi
        git push --force 2> /dev/null
      fi
    done
  fi
done

git checkout "$current_branch"
